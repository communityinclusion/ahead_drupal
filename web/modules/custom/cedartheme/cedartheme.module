<?php

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function cedartheme_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.cedartheme':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('This is an example module.') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_mail().
 */
function cedartheme_mail($key, &$message, $params) {
  switch ($key) {
    case 'cedartheme_log':
      $message['from'] = \Drupal::config('system.site')->get('mail');
      $message['subject'] = t('There is an error on your website');
      $message['body'][] = $params['message'];
      $user_message = 'The user that was logged in: [current-user:name].';
      $message['body'][] = \Drupal::token()->replace($user_message, ['current-user' => \Drupal::currentUser()]);

      break;
  }
}

/**
 * Implements hook_mail_alter().
 */
function cedartheme_mail_alter(&$message) {
  switch ($message['key']) {
    case 'cedartheme_log':
      $message['headers']['Content-Type'] = 'text/html; charset=UTF-8; format=flowed; delsp=yes';
      break;
  }
}

/**
 * Implements hook_token_info().
 */
function cedartheme_token_info() {
  $type = [
    'name' => t('Hello World'),
    'description' => t('Tokens related to the Hello World module.'),
  ];

  $tokens['salutation'] = [
    'name' => t('Salutation'),
    'description' => t('The Hello World salutation value.'),
  ];

  return [
    'types' => ['cedartheme' => $type],
    'tokens' => ['cedartheme' => $tokens],
  ];
}

/**
 * Implements hook_tokens().
 */
function cedartheme_tokens($type, $tokens, array $data, array $options, \Drupal\Core\Render\BubbleableMetadata $bubbleable_metadata) {
  $replacements = [];
  if ($type == 'cedartheme') {
    foreach ($tokens as $name => $original) {
      switch ($name) {
        case 'salutation':
          $replacements[$original] = \Drupal::service('cedartheme.salutation')->getSalutation();
          $config = \Drupal::config('cedartheme.custom_salutation');
          $bubbleable_metadata->addCacheableDependency($config);
          break;

      }
    }
  }

  return $replacements;
}

/**
 * Implements hook_theme().
 */
function cedartheme_theme($existing, $type, $theme, $path) {
  return [
    'cedartheme_salutation' => [
      'variables' => ['salutation' => NULL, 'target' => NULL, 'overridden' => FALSE],
    ],
  ];
}

/**
 * Default preprocessor function for the cedartheme_salutation theme hook.
 */
function template_preprocess_cedartheme_salutation(&$variables) {
  $variables['attributes'] = [
    'class' => ['salutation'],
  ];
}

/**
 * Implements hook_theme_suggestions_HOOK().
 */
function cedartheme_theme_suggestions_cedartheme_salutation($variables) {
  $suggestions = [];

  if ($variables['overridden'] == TRUE) {
    $suggestions[] = 'cedartheme_salutation__overridden';
  }

  return $suggestions;
}
